Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_udivmodsi4.o)
                              main.o (__udivmodsi4)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_divmodsi4.o)
                              main.o (__divmodsi4)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega169.o (exit)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
                              tinythreads.o (__do_copy_data)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                              tinythreads.o (__do_clear_bss)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(setjmp.o)
                              tinythreads.o (setjmp)

Allocating common symbols
Common symbol       size              file

initp               0x6d              tinythreads.o
threads             0x1b4             tinythreads.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega169.o
LOAD tinythreads.o
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega169.a
END GROUP
                0x0000000000000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                0x0000000000800060                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x77c
 *(.vectors)
 .vectors       0x0000000000000000       0x5c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega169.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000005c                . = ALIGN (0x2)
                0x000000000000005c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000005c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000005c                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x000000000000005c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000005c                __ctors_start = .
 *(.ctors)
                0x000000000000005c                __ctors_end = .
                0x000000000000005c                __dtors_start = .
 *(.dtors)
                0x000000000000005c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000005c        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega169.o
                0x000000000000005c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000005c        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega169.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000068       0x16 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000068                __do_copy_data
 .init4         0x000000000000007e       0x10 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                0x000000000000007e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000008e        0x8 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega169.o
 *(.init9)
 *(.text)
 .text          0x0000000000000096        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega169.o
                0x0000000000000096                __vector_22
                0x0000000000000096                __vector_1
                0x0000000000000096                __vector_12
                0x0000000000000096                __bad_interrupt
                0x0000000000000096                __vector_6
                0x0000000000000096                __vector_11
                0x0000000000000096                __vector_13
                0x0000000000000096                __vector_17
                0x0000000000000096                __vector_19
                0x0000000000000096                __vector_5
                0x0000000000000096                __vector_4
                0x0000000000000096                __vector_9
                0x0000000000000096                __vector_2
                0x0000000000000096                __vector_21
                0x0000000000000096                __vector_15
                0x0000000000000096                __vector_8
                0x0000000000000096                __vector_14
                0x0000000000000096                __vector_10
                0x0000000000000096                __vector_16
                0x0000000000000096                __vector_18
                0x0000000000000096                __vector_20
 .text          0x000000000000009a        0x0 tinythreads.o
 .text          0x000000000000009a        0x0 main.o
 .text          0x000000000000009a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x000000000000009a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_divmodsi4.o)
 .text          0x000000000000009a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_negsi2.o)
 .text          0x000000000000009a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text          0x000000000000009a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000009a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x000000000000009a        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(setjmp.o)
                0x000000000000009a                . = ALIGN (0x2)
 *(.text.*)
 .text.dispatch
                0x000000000000009a       0x40 tinythreads.o
 .text.spawn    0x00000000000000da      0x12c tinythreads.o
                0x00000000000000da                spawn
 .text.yield    0x0000000000000206       0x26 tinythreads.o
                0x0000000000000206                yield
 .text.lock     0x000000000000022c       0x54 tinythreads.o
                0x000000000000022c                lock
 .text.unlock   0x0000000000000280       0x52 tinythreads.o
                0x0000000000000280                unlock
 .text.blink    0x00000000000002d2       0x16 main.o
                0x00000000000002d2                blink
 .text.init_lcd
                0x00000000000002e8       0x1a main.o
                0x00000000000002e8                init_lcd
 .text.init_button
                0x0000000000000302        0xc main.o
                0x0000000000000302                init_button
 .text.init_timer
                0x000000000000030e       0x22 main.o
                0x000000000000030e                init_timer
 .text.digitLookUp
                0x0000000000000330       0x96 main.o
                0x0000000000000330                digitLookUp
 .text.writeChar
                0x00000000000003c6       0x74 main.o
                0x00000000000003c6                writeChar
 .text.is_prime
                0x000000000000043a       0x92 main.o
                0x000000000000043a                is_prime
 .text.printAt  0x00000000000004cc       0x8c main.o
                0x00000000000004cc                printAt
 .text.button   0x0000000000000558       0x1e main.o
                0x0000000000000558                button
 .text.computePrimes
                0x0000000000000576       0x2c main.o
                0x0000000000000576                computePrimes
 .text.__vector_3
                0x00000000000005a2       0x50 main.o
                0x00000000000005a2                __vector_3
 .text.__vector_7
                0x00000000000005f2       0x4c main.o
                0x00000000000005f2                __vector_7
 .text.startup.main
                0x000000000000063e       0x36 main.o
                0x000000000000063e                main
 .text.libgcc.mul
                0x0000000000000674        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000000674       0x44 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_udivmodsi4.o)
                0x0000000000000674                __udivmodsi4
 .text.libgcc   0x00000000000006b8        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x00000000000006b8        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x00000000000006b8        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x00000000000006b8        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x00000000000006b8        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x00000000000006b8        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x00000000000006b8       0x2e /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_divmodsi4.o)
                0x00000000000006b8                __divmodsi4
 .text.libgcc   0x00000000000006e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x00000000000006e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x00000000000006e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x00000000000006e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x00000000000006e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x00000000000006e6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x00000000000006e6       0x10 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_negsi2.o)
                0x00000000000006e6                __negsi2
 .text.libgcc   0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000006f6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000006f6       0x82 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(setjmp.o)
                0x00000000000006f6                setjmp
                0x0000000000000736                longjmp
                0x0000000000000778                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000778        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                0x0000000000000778                exit
                0x0000000000000778                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000778        0x4 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000077c                _etext = .

.data           0x0000000000800100       0x10 load address 0x000000000000077c
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega169.o
 .data          0x0000000000800100        0x0 tinythreads.o
 .data          0x0000000000800100        0x0 main.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_negsi2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(setjmp.o)
 *(.data*)
 .data.current  0x0000000000800100        0x2 tinythreads.o
                0x0000000000800100                current
 .data.freeQ    0x0000000000800102        0x2 tinythreads.o
                0x0000000000800102                freeQ
 .data.primeMutex
                0x0000000000800104        0x4 main.o
                0x0000000000800104                primeMutex
 .data.buttonMutex
                0x0000000000800108        0x4 main.o
                0x0000000000800108                buttonMutex
 .data.blinkMutex
                0x000000000080010c        0x4 main.o
                0x000000000080010c                blinkMutex
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800110                . = ALIGN (0x2)
                0x0000000000800110                _edata = .
                0x0000000000800110                PROVIDE (__data_end, .)

.bss            0x0000000000800110      0x225
                0x0000000000800110                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega169.o
 .bss           0x0000000000800110        0x0 tinythreads.o
 .bss           0x0000000000800110        0x0 main.o
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_negsi2.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800110        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(setjmp.o)
 *(.bss*)
 .bss.initialized
                0x0000000000800110        0x2 tinythreads.o
                0x0000000000800110                initialized
 .bss.readyQ    0x0000000000800112        0x2 tinythreads.o
                0x0000000000800112                readyQ
 *(COMMON)
 COMMON         0x0000000000800114      0x221 tinythreads.o
                0x0000000000800114                initp
                0x0000000000800181                threads
                0x0000000000800335                PROVIDE (__bss_end, .)
                0x000000000000077c                __data_load_start = LOADADDR (.data)
                0x000000000000078c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800335        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800335                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 tinythreads.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega169.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Alternative_2.elf elf32-avr)
LOAD linker stubs
